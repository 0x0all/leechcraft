/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2006-2014  Georg Rudoy
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#pragma once

#include "xpcconfig.h"

class QString;

namespace LeechCraft
{
namespace Util
{
namespace AN
{
	/** @brief Returns the human-readable name of the event \em category.
	 *
	 * If the \em category is not known, this function just returns the
	 * \em category string.
	 *
	 * @param[in] category The ID of the event category.
	 * @return The human-readable name of the category, or \em category
	 * if it is not known.
	 *
	 * @sa GetANTypeName()
	 */
	UTIL_XPC_API QString GetCategoryName (const QString& category);

	/** @brief Returns the human-readable name of the event \em type.
	 *
	 * If the \em type is not known, this function just returns the
	 * \em type string.
	 *
	 * @param[in] type The ID of the event type.
	 * @return The human-readable name of the type, or \em type if it is
	 * not known.
	 *
	 * @sa GetANCategoryName()
	 */
	UTIL_XPC_API QString GetTypeName (const QString& type);

}
}
}

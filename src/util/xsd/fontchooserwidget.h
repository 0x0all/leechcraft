/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2006-2014  Georg Rudoy
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#pragma once

#include <QWidget>
#include "ui_fontchooserwidget.h"

namespace LeechCraft
{
namespace Util
{
	/** @brief Provides a widget for choosing a font.
	 *
	 * This widget allows the user to choose a font in the XML settings
	 * dialog.
	 */
	class FontChooserWidget : public QWidget
	{
		Q_OBJECT

		Ui::FontChooserWidget Ui_;
	public:
		/** @brief Constructs the widget with the given parent.
		 *
		 * @param[in] parent The parent widget.
		 */
		FontChooserWidget (QWidget *parent = nullptr);

		/** @brief Returns the currently selected font.
		 *
		 * @return The currently chosen font.
		 *
		 * @sa SetFont()
		 */
		QFont GetFont () const;

		/** @brief Sets the currently font to \em font.
		 *
		 * @param[in] font The font to set the currently chosen one to.
		 *
		 * @sa GetFont()
		 */
		void SetFont (const QFont& font);
	signals:
		/** @brief Emitted when another font has been chosen.
		 *
		 * @param[out] font The new chosen font.
		 */
		void fontChanged (QFont font);
	};
}
}

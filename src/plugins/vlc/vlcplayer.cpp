/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2013  Vladislav Tyulbashev
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#include "vlcplayer.h"
#include <vlc/vlc.h>
#include <QVBoxLayout>
#include <QPushButton>
#include <QTime>
#include <QMouseEvent>

namespace LeechCraft
{
namespace vlc
{
	VlcPlayer::VlcPlayer (QWidget *parent)
	{
		const char * const vlc_args[] = {
              "-I", "dummy", /* Don't use any interface */
              "--ignore-config", /* Don't use VLC's config */
              "--extraintf=logger", //log anything
              "--verbose=0"};

		vlcInstance_ = libvlc_new (5, vlc_args);
		mp_ = libvlc_media_player_new (vlcInstance_);
		libvlc_media_player_set_xwindow (mp_, parent->winId ());
		parent_ = parent;
	}
	
	VlcPlayer::~VlcPlayer ()
	{
		libvlc_media_player_release(mp_);
		libvlc_release(vlcInstance_);
	}
	
	void VlcPlayer::addUrl (QString file) 
	{
		m_ = libvlc_media_new_path (vlcInstance_, file.toLocal8Bit ());
		libvlc_media_player_set_media (mp_, m_);
		libvlc_media_player_play (mp_);
	}
	
	void VlcPlayer::clearAll () 
	{	
	}
	
	bool VlcPlayer::nowPlaying ()
	{
		return libvlc_media_player_is_playing (mp_);
	}
	
	double VlcPlayer::getPosition() 
	{
		return libvlc_media_player_get_position(mp_);
	}
	
	void VlcPlayer::play () 
	{
		if (nowPlaying ())
			libvlc_media_player_pause (mp_);
		else
			libvlc_media_player_play (mp_);
	}
	
	void VlcPlayer::stop () {
		libvlc_media_player_stop(mp_);
	}
	
	void VlcPlayer::changePosition (double pos)
	{
		if (libvlc_media_player_get_media (mp_) == nullptr)
			return;
		else
			libvlc_media_player_set_position(mp_, pos);
	}	
	
	QTime VlcPlayer::convertTime (libvlc_time_t t) 
	{
		return QTime (t / 1000 / 60 / 60, t / 1000 / 60 % 60, t / 1000 % 60, t % 1000);
	}

	QTime VlcPlayer::getFullTime ()
	{
		if (libvlc_media_player_get_media (mp_) == nullptr)
			return convertTime (0);
		else
			return convertTime (libvlc_media_player_get_length (mp_));
	}
	
	QTime VlcPlayer::getCurrentTime () 
	{
		if (libvlc_media_player_get_media (mp_) == nullptr)
			return convertTime (0);
		else
			return convertTime (libvlc_media_player_get_time (mp_));
	}
	
	void VlcPlayer::switchWidget (QWidget *widget) 
	{
		libvlc_time_t cur;
		if (libvlc_media_player_get_media (mp_) != nullptr)
			cur = libvlc_media_player_get_time (mp_);
		
		libvlc_media_player_stop (mp_);
		libvlc_media_player_set_xwindow (mp_, widget->winId ());
		libvlc_media_player_play (mp_);
		
		if (libvlc_media_player_get_media (mp_) != nullptr)
			libvlc_media_player_set_time (mp_, cur);
	}
	
	QWidget *VlcPlayer::getParent ()
	{
		return parent_;
	}
}
}

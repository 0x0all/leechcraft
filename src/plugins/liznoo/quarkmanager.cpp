/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2006-2014  Georg Rudoy
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#include "quarkmanager.h"
#include <QStandardItemModel>
#include <util/models/rolenamesmixin.h>
#include "batteryinfo.h"

namespace LC
{
namespace Liznoo
{
	namespace
	{
		class QuarkModel : public Util::RoleNamesMixin<QStandardItemModel>
		{
		public:
			enum Roles
			{
				BatteryId = Qt::UserRole + 1,
				Percentage,
				IsCharging,
				TimeToEmpty,
				TimeToFull
			};

			QuarkModel (QObject *parent = nullptr)
			: Util::RoleNamesMixin<QStandardItemModel> { parent }
			{
				QHash<int, QByteArray> names;
				names [BatteryId] = "batteryId";
				names [Percentage] = "percentage";
				names [IsCharging] = "isCharging";
				names [TimeToEmpty] = "timeToEmpty";
				names [TimeToFull] = "timeToFull";
				setRoleNames (names);
			}
		};
	}

	QuarkManager::QuarkManager (QObject *parent)
	: QObject { parent }
	, Model_ { new QuarkModel { this } }
	{
	}

	QObject* QuarkManager::GetBatteryModel () const
	{
		return Model_;
	}

	void QuarkManager::handleBatteryInfo (const BatteryInfo& info)
	{
		const auto& id = info.ID_;
		const auto isNew = !Battery2Item_.contains (id);
		const auto item = isNew ?  new QStandardItem : Battery2Item_ [id];

		item->setData (info.ID_, QuarkModel::BatteryId);
		item->setData (info.Percentage_, QuarkModel::Percentage);
		item->setData (info.TimeToFull_ && !info.TimeToEmpty_, QuarkModel::IsCharging);
		item->setData (info.TimeToEmpty_, QuarkModel::TimeToEmpty);
		item->setData (info.TimeToFull_, QuarkModel::TimeToFull);

		if (isNew)
		{
			Model_->appendRow (item);
			Battery2Item_ [id] = item;
		}
	}
}
}

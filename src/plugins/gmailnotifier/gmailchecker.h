/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2011  Yury Erik Potapov
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#ifndef PLUGINS_GMAILNOTIFIER_GMAILCHECKER_H
#define PLUGINS_GMAILNOTIFIER_GMAILCHECKER_H
#include <QObject>
#include <QString>
#include "convinfo.h"

class QNetworkAccessManager;
class QNetworkReply;
class QAuthenticator;
class QTimer;

namespace LC
{
namespace GmailNotifier
{
	class GmailChecker: public QObject
	{
		Q_OBJECT

		QNetworkAccessManager *QNAM_;
		QNetworkReply *Reply_;
		QTimer *TimeOutTimer_;

		QString Username_;
		QString Password_;

		bool Failed_;
	public:
		GmailChecker(QObject* = 0);
		void SetAuthSettings (const QString& login, const QString& passwd);

		void Init ();
		void ReInit ();
	private:
		void ParseData (const QString&);
	public slots:
		void checkNow ();
	private slots:
		void httpFinished ();
		void httpAuthenticationRequired (QNetworkReply *networkReply, QAuthenticator *authenticator);
		void timeOut ();
	signals:
		void gotConversations (const ConvInfos_t&);
		void anErrorOccupied (const QString& title, const QString& msg);

		void waitMe ();
		void canContinue ();
	};
}
}

#endif


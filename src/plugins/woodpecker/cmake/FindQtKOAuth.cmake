# kQOAuth library search

IF (QTKOAUTH_INCLUDE_DIR AND QTKOAUTH_LIBRARIES)
	# check cache
	SET(QTKOAUTH_FOUND TRUE)
ELSE (QTKOAUTH_INCLUDE_DIR AND QTKOAUTH_LIBRARIES)
	IF (NOT WIN32)
		FIND_PACKAGE(PkgConfig) 
		PKG_CHECK_MODULES(PC_QTKOAUTH QUIET kqoauth)
		SET(QTKOAUTH_DEFINITIONS ${PC_QTKOAUTH_CFLAGS_OTHER})
	ELSE (NOT WIN32)
		IF (NOT DEFINED QTKOAUTH_DIR)
			IF (QTKOAUTH_FIND_REQUIRED)
				MESSAGE(FATAL_ERROR "Please set QTKOAUTH_DIR variable")
			ELSE (QTKOAUTH_FIND_REQUIRED)
				MESSAGE(STATUS "Please set QTKOAUTH_DIR variable for OAuth login support")
			ENDIF (QTKOAUTH_FIND_REQUIRED)
		ENDIF (NOT DEFINED QTKOAUTH_DIR)

		SET (QTKOAUTH_INCLUDE_WIN32 ${QTKOAUTH_DIR})      

		SET (PROBE_DIR_Debug
			${QTKOAUTH_DIR}/build/lib/Debug)
		SET (PROBE_DIR_Release
			${QTKOAUTH_DIR}/build/lib/MinSizeRel ${QTKOAUTH_DIR}/build/lib/Release)

		FIND_LIBRARY (QTKOAUTH_LIBRARY_DEBUG NAMES kqoauth.lib PATHS ${PROBE_DIR_Debug})
		FIND_LIBRARY (QTKOAUTH_LIBRARY_RELEASE NAMES kqoauth.lib PATHS ${PROBE_DIR_Release})
		win32_tune_libs_names (QTKOAUTH)   
	ENDIF (NOT WIN32)

	IF (NOT WIN32) # regression guard
		FIND_PATH (QTKOAUTH_INCLUDE_DIR
			NAMES
				kqoauthrequest.h
			PATH_SUFFIXES
				QtKOAuth
			PATHS
				${QTKOAUTH_DIR}
				${INCLUDE_INSTALL_DIR}
				${KDE4_INCLUDE_DIR}
			)

	ELSE (NOT WIN32) #may be works for linux too
		FIND_PATH (QTKOAUTH_INCLUDE_DIR
			NAMES
				QtKOAuth/kqoauthrequest.h
			PATH_SUFFIXES
				QtKOAuth
			PATHS
				${QTKOAUTH_DIR}
				${INCLUDE_INSTALL_DIR}
				${KDE4_INCLUDE_DIR}
				${QTKOAUTH_INCLUDE_WIN32}
			)
	ENDIF (NOT WIN32)

ENDIF (QTKOAUTH_INCLUDE_DIR AND QTKOAUTH_LIBRARIES)

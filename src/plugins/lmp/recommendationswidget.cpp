/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2006-2014  Georg Rudoy
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#include "recommendationswidget.h"
#include <QtDebug>
#include <util/sll/prelude.h>
#include <util/sll/visitor.h>
#include <util/threads/futures.h>
#include <interfaces/core/ipluginsmanager.h>
#include <interfaces/media/irecommendedartists.h>
#include <interfaces/media/iaudioscrobbler.h>
#include <interfaces/iinfo.h>
#include "core.h"
#include "xmlsettingsmanager.h"
#include "util.h"
#include "similarview.h"

namespace LC
{
namespace LMP
{
	RecommendationsWidget::RecommendationsWidget (QWidget *parent)
	: QWidget (parent)
	, RecView_ (new SimilarView (Core::Instance ().GetProxy ()))
	{
		Ui_.setupUi (this);

		layout ()->addWidget (RecView_);
	}

	void RecommendationsWidget::InitializeProviders ()
	{
		const auto& provs = Core::Instance ().GetProxy ()->GetPluginsManager ()->
				GetAllCastableTo<Media::IRecommendedArtists*> ();
		for (auto prov : provs)
		{
			Util::Sequence (this, prov->RequestRecommended (10)) >>
					Util::Visitor
					{
						[] (const QString&) {},
						[this] (const Media::SimilarityInfos_t& similars) { HandleInfos (similars); }
					};
		}
	}

	void RecommendationsWidget::HandleInfos (const Media::SimilarityInfos_t& similars)
	{
		const auto initSize = Similars_.size ();
		Similars_ += similars;

		if (initSize)
			std::inplace_merge (Similars_.begin (), Similars_.begin () + initSize, Similars_.end (),
					Util::ComparingBy (&Media::SimilarityInfo::Similarity_));

		RecView_->SetSimilarArtists (Similars_);
	}
}
}

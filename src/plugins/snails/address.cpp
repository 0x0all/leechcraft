/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2006-2014  Georg Rudoy
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#include "address.h"
#include <QDebug>
#include <QDataStream>

namespace LC::Snails
{
	QDataStream& operator<< (QDataStream& out, AddressType a)
	{
		out << static_cast<quint16> (a);
		return out;
	}

	QDataStream& operator>> (QDataStream& in, AddressType& a)
	{
		quint16 t = 0;
		in >> t;
		a = static_cast<AddressType> (t);
		return in;
	}

	QString GetNiceMail (const Address& addr)
	{
		return addr.Name_.isEmpty () ?
				addr.Email_ :
				addr.Name_ + " <" + addr.Email_ + ">";
	}

	QDebug operator<< (QDebug dbg, const Address& addr)
	{
		QDebugStateSaver saver { dbg };
		dbg.nospace () << "Addr { name: `" << addr.Name_
				<< "`, email: `" << addr.Email_
				<< "` }";
		return dbg;
	}

	QDataStream& operator<< (QDataStream& out, const Address& addr)
	{
		out << static_cast<quint8> (1);
		out << addr.Name_
				<< addr.Email_;
		return out;
	}

	QDataStream& operator>> (QDataStream& in, Address& addr)
	{
		quint8 version;
		in >> version;
		if (version != 1)
		{
			qWarning () << Q_FUNC_INFO
					<< "unknown version"
					<< version;
			return in;
		}

		in >> addr.Name_
			>> addr.Email_;

		return in;
	}
}

/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2006-2014  Georg Rudoy
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#pragma once

#include <functional>
#include <memory>
#include <QStyledItemDelegate>

class QByteArray;
class QTreeView;

namespace LeechCraft
{
namespace Snails
{
	enum class MailListMode;

	struct MessageInfo;

	using MessageLoader_f = std::function<std::optional<MessageInfo> (QByteArray)>;

	class MailTreeDelegate : public QStyledItemDelegate
	{
		const MessageLoader_f Loader_;
		QTreeView * const View_;

		MailListMode Mode_;

		int VerticalPadding_ = 2;
		bool ActionsHintsBalls_;
	public:
		MailTreeDelegate (const MessageLoader_f&, QTreeView*, QObject* = nullptr);

		void paint (QPainter*, const QStyleOptionViewItem&, const QModelIndex&) const override;
		QSize sizeHint (const QStyleOptionViewItem&, const QModelIndex&) const override;

		bool editorEvent (QEvent*, QAbstractItemModel*, const QStyleOptionViewItem&, const QModelIndex&) override;
		QWidget* createEditor (QWidget*, const QStyleOptionViewItem&, const QModelIndex&) const override;
		void updateEditorGeometry (QWidget*, const QStyleOptionViewItem&, const QModelIndex&) const override;

		bool eventFilter (QObject*, QEvent*) override;

		void SetMailListMode (MailListMode);
	private:
		int GetTextualHeight (const QModelIndex&, const QStyleOptionViewItem&) const;
		void DrawIcon (QPainter*, QStyleOptionViewItem&, const QModelIndex&) const;

		int DrawMessageActionIcons (QPainter*, const QStyleOptionViewItem&, const QModelIndex&, int) const;
	};
}
}

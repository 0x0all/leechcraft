/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2006-2014  Georg Rudoy
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#include "util.h"
#include <QString>
#include <QStringList>
#include <QByteArray>
#include <QFileDialog>
#include <QDir>
#include <interfaces/core/ientitymanager.h>
#include <util/threads/futures.h>
#include <util/gui/util.h>
#include <util/sll/visitor.h>
#include <util/xpc/util.h>
#include "account.h"

namespace LeechCraft::Snails
{
	QString PlainBody2HTML (const QString& body)
	{
		auto str = body.toHtmlEscaped ();
		str.replace ("\r\n", "<br/>");
		str.replace ("\r", "<br/>");
		str.replace ("\n", "<br/>");
		return str;
	}

	void RunAttachmentSaveDialog (Account *acc, IEntityManager *iem,
			const QByteArray& id, const QStringList& folder, const QString& name)
	{
		const auto& path = QFileDialog::getSaveFileName (nullptr,
				QObject::tr ("Save attachment"),
				QDir::homePath () + '/' + name);
		if (path.isEmpty ())
			return;

		Util::Sequence (nullptr, acc->FetchAttachment (folder, id, name, path)) >>
				Util::Visitor
				{
					[iem, name] (Util::Void)
					{
						iem->HandleEntity (Util::MakeNotification ("LeechCraft Snails",
								QObject::tr ("Attachment %1 fetched successfully.")
										.arg (Util::FormatName (name)),
								Priority::Info));
					},
					[iem, name] (auto errVar)
					{
						iem->HandleEntity (Util::MakeNotification ("LeechCraft Snails",
								QObject::tr ("Unable to fetch %1: %2.")
										.arg (Util::FormatName (name))
										.arg (Util::Visit (errVar, [] (auto err) { return err.what (); })),
								Priority::Critical));
					}
				};
	}
}

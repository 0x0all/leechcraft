/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2006-2014  Georg Rudoy
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#include "bookmarkswidget.h"
#include <QToolBar>
#include "documentbookmarksmanager.h"

namespace LC
{
namespace Monocle
{
	BookmarksWidget::BookmarksWidget (DocumentBookmarksManager *mgr, QWidget *parent)
	: QWidget (parent)
	, Toolbar_ (new QToolBar)
	{
		Ui_.setupUi (this);
		Ui_.BookmarksView_->setModel (mgr->GetModel ());
		Ui_.MainLayout_->insertWidget (0, Toolbar_);

		setEnabled (mgr->HasDoc ());
		connect (mgr,
				&DocumentBookmarksManager::docAvailable,
				this,
				&QWidget::setEnabled);

		auto addBm = Toolbar_->addAction (tr ("Add bookmark"),
				mgr, &DocumentBookmarksManager::AddBookmark);
		addBm->setProperty ("ActionIcon", "bookmark-new");

		auto removeBookmark = Toolbar_->addAction (tr ("Remove bookmark"),
				mgr,
				[mgr, this] { mgr->RemoveBookmark (Ui_.BookmarksView_->currentIndex ()); });
		removeBookmark->setProperty ("ActionIcon", "list-remove");
		Ui_.BookmarksView_->addAction (removeBookmark);

		connect (Ui_.BookmarksView_,
				&QTreeView::activated,
				mgr,
				&DocumentBookmarksManager::Navigate);
	}
}
}

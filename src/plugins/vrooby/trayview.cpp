/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2006-2013  Georg Rudoy
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#include "trayview.h"
#include <QSortFilterProxyModel>
#include <QIcon>
#include <QDeclarativeContext>
#include <QDeclarativeEngine>
#include <QDeclarativeImageProvider>
#include <QGraphicsObject>
#include <util/qml/themeimageprovider.h>
#include "flatmountableitems.h"
#include "devbackend.h"

namespace LeechCraft
{
namespace Vrooby
{
	TrayView::TrayView (ICoreProxy_ptr proxy, QWidget *parent)
	: QDeclarativeView (0)
	, CoreProxy_ (proxy)
	, Flattened_ (new FlatMountableItems (this))
	, Backend_ (0)
	{
		setStyleSheet ("background: transparent");
		setWindowFlags (Qt::ToolTip);
		setAttribute (Qt::WA_TranslucentBackground);

		setResizeMode (SizeRootObjectToView);
		setFixedSize (500, 250);

		engine ()->addImageProvider ("ThemeIcons", new Util::ThemeImageProvider (proxy));

		rootContext ()->setContextProperty ("devModel", Flattened_);
		rootContext ()->setContextProperty ("devicesLabelText", tr ("Removable devices"));
		setSource (QUrl ("qrc:/vrooby/resources/qml/DevicesTrayView.qml"));

		connect (Flattened_,
				SIGNAL (rowsInserted (QModelIndex, int, int)),
				this,
				SIGNAL (hasItemsChanged ()));
		connect (Flattened_,
				SIGNAL (rowsRemoved (QModelIndex, int, int)),
				this,
				SIGNAL (hasItemsChanged ()));
	}

	void TrayView::SetBackend (DevBackend *backend)
	{
		if (Backend_)
			disconnect (rootObject (),
					SIGNAL (toggleMountRequested (const QString&)),
					Backend_,
					SLOT (toggleMount (QString)));

		Backend_ = backend;
		connect (rootObject (),
				SIGNAL (toggleMountRequested (const QString&)),
				Backend_,
				SLOT (toggleMount (QString)));

		Flattened_->SetSource (Backend_->GetDevicesModel ());
	}

	bool TrayView::HasItems () const
	{
		return Flattened_->rowCount ();
	}
}
}

/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2010-2012  Oleg Linkin
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#pragma once

#include <QMetaType>
#include <QVariant>

namespace LeechCraft
{
namespace Blogique
{
	enum class SideWidgetType
	{
		PostOptionsSideWidget,
		CustomSideWidget
	};

	/** @brief Interface representing a side widget for blogique tab's dockwidget'.
		*
		**/
	class IBlogiqueSideWidget
	{
	public:
		virtual ~IBlogiqueSideWidget () {};

		/** @brief Returns human readable name of widget.
		*
		* @return A human readable widget name.
		**/
		virtual QString GetName () const = 0;

		/** @brief Returns a type of blogique side widget.
		*
		* If type of widget is SideWidgetType::PostOptionsSideWidget widget should
		* implement IPostOptionsWidget interface.
		*
		* @return SideWidgetType of blogique side widget.
		*
		* @sa IPostOptionsWidget, ICustomSideWidget.
		**/
		virtual SideWidgetType GetWidgetType () const = 0;

		/** @brief Returns a map with post options.
		 *
		 * If type of widget is not a SideWidgetType::PostOptionsSideWidget widget
		 * should return empty map.
		 *
		 * @return QVariantMap with post options.
		 *
		 * @sa IPostOptionsWidget, ICustomSideWidget.
		 **/
		virtual QVariantMap GetPostOptions () const = 0;

		/** @brief Fill widget with post options.
		 *
		 * If type of widget is not a SideWidgetType::PostOptionsSideWidget widget
		 * shouldn't do anything.
		 *
		 * @sa IPostOptionsWidget, ICustomSideWidget.
		 **/
		virtual void SetPostOptions (const QVariantMap& map) = 0;

		/** @brief Returns a map with custom options.
		 *
		 * If type of widget is a SideWidgetType::PostOptionsSideWidget widget
		 * should return empty map.
		 *
		 * @return QVariantMap with custom options.
		 *
		 * @sa IPostOptionsWidget, ICustomSideWidget.
		 **/
		virtual QVariantMap GetCustomData () const = 0;

		/** @brief Fill widget with custom data.
		 *
		 * If type of widget is a SideWidgetType::PostOptionsSideWidget widget
		 * shouldn't do anything.
		 *
		 * @sa IPostOptionsWidget, ICustomSideWidget.
		 **/
		virtual void SetCustomData (const QVariantMap& map) = 0;

		/** @brief Set account object.
		 *
		 * @sa IAccount.
		 **/
		virtual void SetAccount (QObject *accountObj) = 0;
	};
}
}

Q_DECLARE_INTERFACE (LeechCraft::Blogique::IBlogiqueSideWidget,
		"org.Deviant.LeechCraft.Blogique.IBlogiqueSideWidget/1.0");

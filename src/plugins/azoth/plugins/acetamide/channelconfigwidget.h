/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2010-2011  Oleg Linkin
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/


#ifndef PLUGINS_AZOTH_PLUGINS_ACETAMIDE_CHANNELCONFIGWIDGET_H
#define PLUGINS_AZOTH_PLUGINS_ACETAMIDE_CHANNELCONFIGWIDGET_H

#include <QWidget>
#include <QDateTime>
#include <interfaces/azoth/iconfigurablemuc.h>
#include "ui_channelconfigwidget.h"
#include "localtypes.h"

class QStandardItemModel;

namespace LeechCraft
{
namespace Azoth
{
namespace Acetamide
{

	class ChannelCLEntry;
	class SortFilterProxyModel;

	class ChannelConfigWidget : public QWidget
								, public IMUCConfigWidget
	{
		Q_OBJECT
		Q_INTERFACES (LeechCraft::Azoth::IMUCConfigWidget)

		Ui::ChannelConfigWidget Ui_;
		ChannelCLEntry *ChannelEntry_;
		ChannelModes ChannelMode_;
		QStandardItemModel *BanModel_;
		QStandardItemModel *ExceptModel_;
		QStandardItemModel *InviteModel_;
		SortFilterProxyModel *BanFilterModel_;
		SortFilterProxyModel *ExceptFilterModel_;
		SortFilterProxyModel *InviteFilterModel_;
		bool IsWidgetRequest_;
	public:
		ChannelConfigWidget (ChannelCLEntry*, QWidget* = 0);
	private:
		void SetModesUi ();
	public slots:
		void accept ();
		void on_BanSearch__textChanged (const QString&);
		void on_ExceptSearch__textChanged (const QString&);
		void on_InviteSearch__textChanged (const QString&);
		void on_tabWidget_currentChanged (int);
		void on_UpdateBan__clicked ();
		void on_AddBan__clicked ();
		void on_RemoveBan__clicked ();
		void on_UpdateExcept__clicked ();
		void on_AddExcept__clicked ();
		void on_RemoveExcept__clicked ();
		void on_AddInvite__clicked ();
		void on_UpdateInvite__clicked ();
		void on_RemoveInvite__clicked ();

		void addBanListItem (const QString&, 
				const QString&, const QDateTime&);
		void addExceptListItem (const QString&, 
				const QString&, const QDateTime&);
		void addInviteListItem (const QString&, 
				const QString&, const QDateTime&);

		void handleNewChannelModes (const ChannelModes&);
	signals:
		void dataReady ();
	};
}
}
}
#endif // PLUGINS_AZOTH_PLUGINS_ACETAMIDE_CHANNELCONFIGWIDGET_H

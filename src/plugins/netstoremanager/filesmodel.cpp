/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2010-2012  Oleg Linkin
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#include "filesmodel.h"
#include <QMimeData>
#include <QtDebug>
#include <QTreeView>
#include <QMenu>
#include "interfaces/netstoremanager/isupportfilelistings.h"

namespace LeechCraft
{
namespace NetStoreManager
{
	FilesModel::FilesModel (QObject *parent)
	: QStandardItemModel (parent)
	{
	}

	Qt::DropActions FilesModel::supportedDropActions () const
	{
		return Qt::MoveAction | Qt::CopyAction;
	}

	QStringList FilesModel::mimeTypes () const
	{
		return { "x-leechcraft/nsm-item" };
	}

	QMimeData* FilesModel::mimeData (const QModelIndexList& indexes) const
	{
		QMimeData *mimeData = new QMimeData ();
		QByteArray encodedData;

		QDataStream stream (&encodedData, QIODevice::WriteOnly);

		Q_FOREACH (const QModelIndex& index, indexes)
			if (index.isValid ())
				stream << data (index).toString ()
						<< data (index, ListingRole::ID).toStringList ()
						<< data (index, ListingRole::InTrash).toBool ()
						<< data (index, ListingRole::Directory).toBool ()
						<< index.parent ().data (ListingRole::ID).toStringList ();

		mimeData->setData ("x-leechcraft/nsm-item", encodedData);
		return mimeData;
	}
}
}

/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2010-2011  Oleg Linkin
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#ifndef PLUGINS_POSHUKU_PLUGINS_ONLINEBOOKMARKS_PLUGINS_DELICIOUS_DELICIOUSSERVICE_H
#define PLUGINS_POSHUKU_PLUGINS_ONLINEBOOKMARKS_PLUGINS_DELICIOUS_DELICIOUSSERVICE_H

#include <QObject>
#include <interfaces/core/icoreproxy.h>
#include <interfaces/structures.h>
#include <interfaces/ibookmarksservice.h>

namespace LeechCraft
{
namespace Poshuku
{
namespace OnlineBookmarks
{
namespace Delicious
{

	class DeliciousApi;
	class DeliciousAccount;

	class DeliciousService : public QObject
							, public IBookmarksService
	{
		Q_OBJECT
		Q_INTERFACES (LeechCraft::Poshuku::OnlineBookmarks::IBookmarksService)

	public:
		enum OperationType
		{
			OTAuth,
			OTDownload,
			OTUpload
		};

		struct Request
		{
			OperationType Type_;
			QString Login_;
			QString Password_;
			int Count_;
			int Current_;
		};
	private:
		ICoreProxy_ptr CoreProxy_;
		std::shared_ptr<DeliciousApi> DeliciousApi_;
		QList<DeliciousAccount*> Accounts_;
		QHash<QNetworkReply*, Request> Reply2Request_;
		QHash<IAccount*, QByteArray> Account2ReplyContent_;
	public:
		DeliciousService (ICoreProxy_ptr);
		void Prepare ();
		IBookmarksService::Features GetFeatures () const;
		QObject* GetQObject ();
		QString GetServiceName () const;
		QIcon GetServiceIcon () const;
		QWidget* GetAuthWidget ();
		void CheckAuthData (const QVariantMap&);
		void RegisterAccount (const QVariantMap&);
		void UploadBookmarks (QObject*, const QVariantList&);
		void DownloadBookmarks (QObject*, const QDateTime&);
		DeliciousAccount* GetAccountByName (const QString&);
	private:
		void SendRequest (const QString&, const QByteArray&, const Request&);
		void RestoreAccounts ();
	private slots:
		void getReplyFinished ();
		void readyReadReply ();
		void saveAccounts () const;
		void removeAccount (QObject*);
	signals:
		void accountAdded (QObjectList);
		void gotEntity (const LeechCraft::Entity&);
		void gotBookmarks (QObject*, const QVariantList&);
		void bookmarksUploaded ();
	};
}
}
}
}

#endif // PLUGINS_POSHUKU_PLUGINS_ONLINEBOOKMARKS_PLUGINS_DELICIOUS_DELICIOUSSERVICE_H

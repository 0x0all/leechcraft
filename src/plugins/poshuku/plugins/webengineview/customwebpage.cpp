/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2006-2014  Georg Rudoy
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#include "customwebpage.h"
#include <util/sll/delayedexecutor.h>
#include <interfaces/poshuku/iproxyobject.h>
#include "customwebview.h"

namespace LC::Poshuku::WebEngineView
{
	CustomWebPage::CustomWebPage (const ICoreProxy_ptr& proxy, IProxyObject *poshukuProxy, QWidget *parent)
	: QWebEnginePage { parent }
	, Proxy_ { proxy }
	, PoshukuProxy_ { poshukuProxy }
	, LinkOpenModifier_ { poshukuProxy->GetLinkOpenModifier () }
	{
		Util::ExecuteLater ([this]
				{
					LinkOpenModifier_->InstallOn (view ());
					for (const auto child : view ()->findChildren<QWidget*> ())
						LinkOpenModifier_->InstallOn (child);
				});
	}

	bool CustomWebPage::acceptNavigationRequest (const QUrl& url,
			NavigationType type, bool isMainFrame)
	{
		if (type == NavigationTypeLinkClicked)
		{
			const auto suggestion = LinkOpenModifier_->GetOpenBehaviourSuggestion ();

			LinkOpenModifier_->ResetSuggestionState ();

			if (suggestion.NewTab_)
			{
				auto view = std::make_shared<CustomWebView> (Proxy_, PoshukuProxy_);
				emit webViewCreated (view, suggestion.Invert_);

				view->Load (url, {});

				return false;
			}
		}

		return QWebEnginePage::acceptNavigationRequest (url, type, isMainFrame);
	}
}

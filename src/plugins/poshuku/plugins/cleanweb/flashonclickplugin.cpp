/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2006-2014  Georg Rudoy
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#include "flashonclickplugin.h"
#include <algorithm>
#include <QDebug>
#include <interfaces/poshuku/iflashoverrider.h>
#include <interfaces/core/icoreproxy.h>
#include <interfaces/core/ipluginsmanager.h>
#include "xmlsettingsmanager.h"
#include "flashplaceholder.h"
#include "flashonclickwhitelist.h"

namespace LeechCraft
{
namespace Poshuku
{
namespace CleanWeb
{
	FlashOnClickPlugin::FlashOnClickPlugin (const ICoreProxy_ptr& proxy,
			FlashOnClickWhitelist *wl, QObject *parent)
	: QObject { parent }
	, Proxy_ { proxy }
	, WL_ { wl }
	{
	}

	QWebPluginFactory::Plugin FlashOnClickPlugin::Plugin (bool isq) const
	{
		if (isq)
			throw "I want to be anonymous";

		QWebPluginFactory::Plugin result;
		result.name = "FlashOnClickPlugin";
		QWebPluginFactory::MimeType mime;
		mime.fileExtensions << "swf";
		mime.name = "application/x-shockwave-flash";
		result.mimeTypes << mime;
		return result;
	}

	QWidget* FlashOnClickPlugin::Create (const QString&,
			const QUrl& url,
			const QStringList&,
			const QStringList&)
	{
		if (!XmlSettingsManager::Instance ()->
				property ("EnableFlashOnClick").toBool ())
			return nullptr;

		if (WL_->Matches (url.toString ()))
			return nullptr;

		const auto& overs = Proxy_->GetPluginsManager ()->GetAllCastableTo<IFlashOverrider*> ();
		if (std::any_of (overs.begin (), overs.end (),
					[&url] (IFlashOverrider *plugin) { return plugin->WouldOverrideFlash (url); }))
			return nullptr;

		return new FlashPlaceHolder { url, WL_ };
	}
}
}
}

INCLUDE (${QT_USE_FILE})
INCLUDE_DIRECTORIES (
	${CMAKE_CURRENT_BINARY_DIR}
	${Boost_INCLUDE_DIR}
	${LEECHCRAFT_INCLUDE_DIR}
	${PYTHON_INCLUDE_DIRS}
	)
SET (SRCS
	wrapperobject.cpp
	pylc.cpp
	core.cpp
	coreproxywrapper.cpp
	generaldecorator.cpp
	downloadentitywrapper.cpp
	)
SET (HEADERS
	wrapperobject.h
	pylc.h
	core.h
	coreproxywrapper.h
	generaldecorator.h
	downloadentitywrapper.h
	)
SET (TRANSLATIONS
	leechcraft_pylc_ru_RU.ts
	)
SET (RESOURCES resources.qrc)
SET (COMPILED_TRANSLATIONS
	${CMAKE_CURRENT_SOURCE_DIR}/leechcraft_pylc_ru_RU.qm
	)
QT4_WRAP_CPP (MOC_SRCS ${HEADERS})
QT4_ADD_RESOURCES (RCCS ${RESOURCES})

LIST (GET MOC_SRCS 0 WROBJ_MOCCED)
#GET_PROPERTY (WROBJ_MOCCED_DEFINITIONS SOURCE ${WROBJ_MOCCED} PROPERTY COMPILE_DEFINITIONS)
#SET_PROPERTY (SOURCE ${WROBJ_MOCCED} PROPERTY COMPILE_DEFINITIONS "${WROBJ_MOCCED_DEFINITIONS}qt_metacast=qt_metacast_dummy")

#FILE (READ ${WROBJ_MOCCED} WROBJ_MOCCED_CONTENTS)
#STRING (REPLACE "WrapperObject::qt_metacast" "WrapperObject::qt_metacast_dummy" WROBJ_MOCCED_CONTENTS_R ${WROBJ_MOCCED_CONTENTS} )
#FILE (WRITE ${WROBJ_MOCCED} ${WROBJ_MOCCED_CONTENTS_R})
#MESSAGE (STATUS "Hacked Qt metacasts in ${WROBJ_MOCCED}")

SET (DUMMY_WROBJ_MOCCED "dummy_wrobj_mocced")

ADD_CUSTOM_COMMAND (OUTPUT
	${DUMMY_WROBJ_MOCCED}
	COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/hackmoc.sh ARGS ${WROBJ_MOCCED}
	DEPENDS ${WROBJ_MOCCED}
	WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
	)
ADD_CUSTOM_COMMAND (OUTPUT
	${COMPILED_TRANSLATIONS}
	COMMAND "${QT_LRELEASE_EXECUTABLE}" ${TRANSLATIONS}
	DEPENDS ${TRANSLATIONS}
	WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
	)
ADD_LIBRARY (leechcraft_pylc SHARED
	${COMPILED_TRANSLATIONS}
	${SRCS}
	${MOC_SRCS}
	${RCCS}
	${DUMMY_WROBJ_MOCCED}
	)
MESSAGE (STATUS "${PYTHON_LIBRARIES}")
TARGET_LINK_LIBRARIES (leechcraft_pylc
	${QT_LIBRARIES}
	plugininterface
	xmlsettingsdialog
	${PYTHON_LIBRARIES}
	PythonQt
	PythonQtGui
	)
INSTALL (TARGETS leechcraft_pylc DESTINATION ${LC_PLUGINS_DEST})
INSTALL (FILES ${COMPILED_TRANSLATIONS} DESTINATION ${LC_TRANSLATIONS_DEST})

= Building =
Since you are reading this, you've already got the sources, but just in case, our git repo is at git://github.com/0xd34df00d/leechcraft.git

We will use so-called out-of-source builds. They allow to have different builds with different configuration simultaneously as well as easily remove the build directory if something goes wrong.
So, create a directory in near the 'src' dir, for example, 'build', and cd into it. Type

	cmake -DCMAKE_BUILD_TYPE=BuildType ../src 

Here BuildType specifies what type of the build you want:
* Release
  Release version with no debugging information and optimizations enabled.
* Debug
  Debug version with debugging information and no optimizations at all.
* RelWithDebInfo
  A version with both debugging information and optimizations enabled (recommended).
* MinSizeRel
  Release version with optimizations for producing executables of minimal size.

Then, after cmake successfully prepares the build system, type 'ccmake .' and check the list of plugins to be built. You can enable or disable them there through a nice UI. Then, after you've selected what you want to build, run `make` and have a cup of coffee while LeechCraft compiles. If it fails, join the Jabber conference leechcraft@conference.jabber.ru and feel free to ask.

Become root and issue make install to install LeechCraft into /usr/local. That's it!

Please note that LeechCraft won't work without installing.

You may choose to install LeechCraft into different location by adding the -DCMAKE_INSTALL_PREFIX=/install/path to the cmake command line, though such configurations are rather experimental.

= Dependencies =
Consider Depends:, Recommends:, Suggests: and Provides: to be virtual packages. Plugins don't depend on other plugins, they depend on functionality provided by other plugins.
Qt4 is >= 4.6.
Boost is >= 1.37 with patch against faulty epoll on newer kernels or just >= 1.38.

The following lists the special dependencies of plugins and dependencies between the plugins themselves.

== Overall ==
 Qt4 (>=4.6, 4.7 is recommended)
	Core
	Gui
	Network
	XML
	Script
	SQL
	SQLite
	PostgreSQL recommended
 Boost (>= 1.37)
	Header-only libraries
	date_time
	filesystem
	system
	thread
	signals

== Aggregator ==
 Depends: downloader-http
 Recommends: webbrowser
 Suggests: aggregatedisplay
 Provides: feedreader

== Anhero ==
 KDE >= 4.2

== BitTorrent ==
 Rasterbar Libtorrent (0.15)
 Depends: aggregatedisplay
 Provides: downloader-bittorrent
 Suggests: webbrowser
 
== CSTP ==
 Depends: aggregatedisplay
 Provides: downloader-http

== DBusManager ==
 QtDBus
 Provides: dbus

== DeadLyrics ==
 Depends: downloader-http
		  aggregatedisplay

== LackMan ==
 Depends: downloader-http

== LCFTP ==
 libcurl >= 7.19.4
 Depends: aggregatedisplay

== LMP ==
 Phonon >= 4.2.0
 Provides: mediaplayer

== New Life ==
 Suggests: feedreader
		   downloader-bittorrent

== Popishu ==
 QScintilla2
 Recommends: scriptrunner

== Poshuku ==
 QtWebkit
 QJson
 Recommends: downloader-http
			 feedreader
			 websearch
 Provides: webbrowser

=== CleanWeb ===
 Depends: downloader-http

=== WYFV ===
 Depends: mediaplayer

== Qrosp ==
 Qross (git://github.com/0xd34df00d/Qross.git)
 Qrosscore is required, qrosspython is recommended.
 Provides: scriptrunner

== SeekThru ==
 Depends: downloader-http
		  aggregatedisplay
 Provides: websearch

== Summary ==
 Recommends: downloader-*
 Suggests: feedreader
 Provides: aggregatedisplay

== vGrabber ==
 Depends: downloader-http
		  aggregatedisplay
